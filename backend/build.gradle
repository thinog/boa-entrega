buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${gradlePluginVersion}"
    }
}

allprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    group = 'boa.entrega'
    sourceCompatibility = '18'

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.flywaydb:flyway-core'
        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'org.postgresql:postgresql'
        testImplementation 'org.testcontainers:postgresql'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"
        testImplementation 'org.testcontainers:junit-jupiter'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    dependencyManagement {
        imports {
            mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        }
    }

    wrapper {
        gradleVersion = gradleVersion
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }
}

dependencies {
    implementation project(':customer')
    implementation project(':supplier')
}

wrapper {
    gradleVersion = gradleVersion
}